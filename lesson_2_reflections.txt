What happens when you initialize a repository? 
Why do you need to do it?

-When I initialize a repository, a hidden .git directory
is created which saves metadata to track any commits that
I make using git.  No initial commit is created, however.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

-The working directory contains all the files in the repository.
In contrast, the staging area contains only those files I specifically
add to the staging area.  This allows me greater control over what is
included in commits.  For example, I might be working for a file, and
realize it's been too long since my last commit.  I could save the files
that are logically related to each other in one commit, then save the
other files in another commit.  My commit history would then be easier
to understand and utilize.

How can you use the staging area to make sure you have one commit
per logical change?

-By being careful about what I add to the staging area. See
the above reflection answer.

What are some situations when branches would be helpful
in keeping your history organized? How would branches help?

-It would be useful to use branches when I was creating a
different version but wanted to keep the original version, 
and also if I wanted to experiment with a new feature.
Branches help by allowing me to keep the changes for
the experimental feature or new version separate from the orignal version,
while allowing progress to continue being made on the original
version (i.e. fixing bugs, adding new features to the master
branch.)